{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"ngx-toastr\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(formBuilder, authService, toastrService) {\n      this.formBuilder = formBuilder;\n      this.authService = authService;\n      this.toastrService = toastrService;\n    }\n\n    ngOnInit() {\n      this.createLoginForm();\n    }\n\n    createLoginForm() {\n      this.loginForm = this.formBuilder.group({\n        email: [\"\", Validators.required],\n        password: [\"\", Validators.required]\n      });\n    }\n\n    login() {\n      if (this.loginForm.valid) {\n        console.log(this.loginForm.value);\n        let loginModel = Object.assign({}, this.loginForm.value);\n        this.authService.login(loginModel).subscribe(response => {\n          this.toastrService.info(response.message);\n          localStorage.setItem(\"token\", response.data.token);\n        }, responseError => {\n          //console.log(responseError)\n          this.toastrService.error(responseError.error);\n        });\n      }\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.ToastrService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 21,\n    vars: 1,\n    consts: [[1, \"text-center\"], [1, \"form-signin\"], [3, \"formGroup\"], [1, \"h3\", \"mb-3\", \"fw-normal\"], [1, \"form-floating\"], [\"formControlName\", \"email\", \"type\", \"email\", \"id\", \"floatingInput\", \"placeholder\", \"name@example.com\", 1, \"form-control\"], [\"for\", \"floatingInput\"], [\"formControlName\", \"password\", \"type\", \"password\", \"id\", \"floatingPassword\", \"placeholder\", \"Password\", 1, \"form-control\"], [\"for\", \"floatingPassword\"], [1, \"checkbox\", \"mb-3\"], [\"type\", \"checkbox\", \"value\", \"remember-me\"], [1, \"w-100\", \"btn\", \"btn-lg\", \"btn-primary\", 3, \"click\"], [1, \"mt-5\", \"mb-3\", \"text-muted\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"body\", 0)(1, \"main\", 1)(2, \"form\", 2)(3, \"h1\", 3);\n        i0.ɵɵtext(4, \"Giri\\u015F yap\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelement(6, \"input\", 5);\n        i0.ɵɵelementStart(7, \"label\", 6);\n        i0.ɵɵtext(8, \"E-posta\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 4);\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵelementStart(11, \"label\", 8);\n        i0.ɵɵtext(12, \"Parola\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 9)(14, \"label\");\n        i0.ɵɵelement(15, \"input\", 10);\n        i0.ɵɵtext(16, \" Remember me \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_17_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(18, \" Giri\\u015F yap \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"p\", 12);\n        i0.ɵɵtext(20, \"\\u00A9 2017\\u20132021\");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{height:100%}body[_ngcontent-%COMP%]{display:flex;align-items:center;padding-top:40px;padding-bottom:40px}.form-signin[_ngcontent-%COMP%]{width:100%;max-width:330px;padding:15px;margin:auto}.form-signin[_ngcontent-%COMP%]   .checkbox[_ngcontent-%COMP%]{font-weight:400}.form-signin[_ngcontent-%COMP%]   .form-floating[_ngcontent-%COMP%]:focus-within{z-index:2}.form-signin[_ngcontent-%COMP%]   input[type=email][_ngcontent-%COMP%]{margin-bottom:-1px;border-bottom-right-radius:0;border-bottom-left-radius:0}.form-signin[_ngcontent-%COMP%]   input[type=password][_ngcontent-%COMP%]{margin-bottom:10px;border-top-left-radius:0;border-top-right-radius:0}.bd-placeholder-img[_ngcontent-%COMP%]{font-size:1.125rem;text-anchor:middle;-webkit-user-select:none;user-select:none}@media (min-width: 768px){.bd-placeholder-img-lg[_ngcontent-%COMP%]{font-size:3.5rem}}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}